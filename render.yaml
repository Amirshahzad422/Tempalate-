services:
  - type: web
    name: main-app
    env: docker
    plan: starter
    rootDir: .
    dockerfilePath: ./Dockerfile
    autoDeploy: true
    healthCheckPath: /
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: APP_URL
        value: https://REPLACE_WITH_DOMAIN
      - key: APP_KEY
        sync: false
      - key: DB_CONNECTION
        value: pgsql
      - key: DB_HOST
        fromDatabase: main-db
        name: host
      - key: DB_PORT
        fromDatabase: main-db
        name: port
      - key: DB_DATABASE
        fromDatabase: main-db
        name: database
      - key: DB_USERNAME
        fromDatabase: main-db
        name: user
      - key: DB_PASSWORD
        fromDatabase: main-db
        name: password
      - key: QUEUE_CONNECTION
        value: redis
      - key: CACHE_DRIVER
        value: redis
      - key: SESSION_DRIVER
        value: redis
      - key: REDIS_URL
        fromService: main-redis
        name: connectionString
      - key: FILESYSTEM_DISK
        value: s3
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_DEFAULT_REGION
        value: us-east-1
      - key: AWS_BUCKET
        sync: false
    databases:
      - name: main-db
    services:
      - name: main-redis
        type: redis
        plan: starter
    postDeployCommand: php artisan migrate --force

  - type: worker
    name: main-worker
    env: docker
    plan: starter
    rootDir: .
    dockerfilePath: ./Dockerfile
    autoDeploy: true
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: APP_URL
        value: https://REPLACE_WITH_DOMAIN
      - key: APP_KEY
        sync: false
      - key: DB_CONNECTION
        value: pgsql
      - key: DB_HOST
        fromDatabase: main-db
        name: host
      - key: DB_PORT
        fromDatabase: main-db
        name: port
      - key: DB_DATABASE
        fromDatabase: main-db
        name: database
      - key: DB_USERNAME
        fromDatabase: main-db
        name: user
      - key: DB_PASSWORD
        fromDatabase: main-db
        name: password
      - key: QUEUE_CONNECTION
        value: redis
      - key: CACHE_DRIVER
        value: redis
      - key: SESSION_DRIVER
        value: redis
      - key: REDIS_URL
        fromService: main-redis
        name: connectionString
    startCommand: php artisan queue:work --sleep=3 --tries=3 --timeout=90

  - type: cron
    name: main-scheduler
    env: docker
    rootDir: .
    dockerfilePath: ./Dockerfile
    schedule: "* * * * *"
    command: php artisan schedule:run
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: APP_URL
        value: https://REPLACE_WITH_DOMAIN
      - key: APP_KEY
        sync: false
      - key: DB_CONNECTION
        value: pgsql
      - key: DB_HOST
        fromDatabase: main-db
        name: host
      - key: DB_PORT
        fromDatabase: main-db
        name: port
      - key: DB_DATABASE
        fromDatabase: main-db
        name: database
      - key: DB_USERNAME
        fromDatabase: main-db
        name: user
      - key: DB_PASSWORD
        fromDatabase: main-db
        name: password

  - type: web
    name: pdf-generator
    env: docker
    plan: starter
    rootDir: pdf-generator
    dockerfilePath: ./pdf-generator/Dockerfile
    autoDeploy: true
    healthCheckPath: /
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: APP_URL
        value: https://REPLACE_WITH_PDF_DOMAIN
      - key: APP_KEY
        sync: false
      - key: DB_CONNECTION
        value: pgsql
      - key: DB_HOST
        fromDatabase: pdf-db
        name: host
      - key: DB_PORT
        fromDatabase: pdf-db
        name: port
      - key: DB_DATABASE
        fromDatabase: pdf-db
        name: database
      - key: DB_USERNAME
        fromDatabase: pdf-db
        name: user
      - key: DB_PASSWORD
        fromDatabase: pdf-db
        name: password
      - key: FILESYSTEM_DISK
        value: s3
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_DEFAULT_REGION
        value: us-east-1
      - key: AWS_BUCKET
        sync: false
    databases:
      - name: pdf-db
    postDeployCommand: php artisan migrate --force 